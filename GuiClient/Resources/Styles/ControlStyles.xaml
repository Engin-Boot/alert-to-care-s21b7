<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--xmlns:local="clr-namespace:GuiClient.Resources.Styles"-->
    <Style x:Key="TextBlockStyle"  TargetType="TextBlock">
        <Style.Setters>
            <Setter Property="Width" Value="auto"></Setter>
            <Setter Property="Height" Value="20"></Setter>
            <!--<Setter Property="TextAlignment" Value="Right"></Setter>-->
            <Setter Property="Foreground" Value="DarkSlateBlue"></Setter>
            <Setter Property="FontWeight" Value="ExtraBold"></Setter>
            <Setter Property="FontSize" Value="15"></Setter>
        </Style.Setters>
    </Style>

    <Style x:Key="TextBoxStyle" TargetType="TextBox">
        <Style.Setters>
            <Setter Property="Width" Value="150"></Setter>
            <Setter Property="Margin" Value="10"></Setter>
            <Setter Property="Height" Value="22"></Setter>
            <Setter Property="FontSize" Value ="12"></Setter>
            <Setter Property="FontWeight" Value="Bold"></Setter>
        </Style.Setters>
    </Style>

    <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
        <Style.Setters>
            <Setter Property="MinWidth" Value="150"></Setter>
            <Setter Property="HorizontalAlignment" Value="Center"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="Margin" Value="10"></Setter>
        </Style.Setters>
    </Style>
    
  <Style x:Key="ButtonStyle" TargetType="Button">
        <Style.Setters>
            <Setter Property="Height" Value="30"></Setter>
            <Setter Property="Width" Value="200"></Setter>
            
            <Setter Property="HorizontalAlignment" Value="Center"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="Margin" Value="20"></Setter>
            <Setter Property ="FontSize" Value="15"></Setter>
            <Setter Property ="Background" Value="LightPink"></Setter>
            <Setter Property ="FontWeight" Value="Bold"></Setter>

        </Style.Setters>
      <Style.Triggers>
          <!-- Property Trigger-->
          <Trigger Property="IsMouseOver" Value="true">
              <Trigger.Setters>
                  <Setter Property="Width" Value="220"></Setter>
                  <!--<Setter Property="Height" Value="35"></Setter>-->
                  <Setter Property ="FontSize" Value="17"></Setter>
              </Trigger.Setters>
          </Trigger>
      </Style.Triggers>
    </Style>

    <Style x:Key="AddDelTab" TargetType="TabItem">
        <Style.Setters>
            <Setter Property="Background" Value="LightSteelBlue"></Setter>
            <Setter Property="Width" Value="150"></Setter>
            <!--<Setter Property="BorderBrush" Value="Blue"></Setter>-->
        </Style.Setters>
    </Style>


    <Style x:Key="TabStyle" TargetType="TabItem">
        <Style.Setters>
            <Setter Property="Width" Value="150"></Setter>
            
            <Setter Property="HorizontalAlignment" Value="Center"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="Background" Value="CornflowerBlue"/>
            <Setter Property="BorderBrush" Value="#acacac"/>
            <Setter Property ="FontSize" Value="15"></Setter>
            <Setter Property ="FontWeight" Value="SemiBold"></Setter>
            <!--<Setter Property="Background" Value="SandyBrown"></Setter>-->
        </Style.Setters>
        <Style.Triggers>
            <!-- Property Trigger-->
            <Trigger Property="IsSelected" Value="True">
                <Trigger.Setters>
                    <!--<Setter Property="Width" Value="150"></Setter>
                    <Setter Property="Height" Value="50"></Setter>-->
                    
                </Trigger.Setters>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="TabControlBack" TargetType="TabControl">
        <Style.Setters>
            <Setter Property="Background" Value="LightSteelBlue"></Setter>
            <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
            <Setter Property="VerticalAlignment" Value="Stretch"></Setter>
        </Style.Setters>
    </Style>

    <SolidColorBrush x:Key="TabItem.Selected.Background" Color="LightSteelBlue"/>
    <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#acacac"/>
    <Style x:Key="TabControlStyle" TargetType="{x:Type TabControl}">
        <!--<Setter Property="Background" Value="SandyBrown"></Setter>-->
        <Setter Property="Padding" Value="2"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="{StaticResource TabItem.Selected.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TabItem.Selected.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0"/>
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1" Height="*"/>
                        </Grid.RowDefinitions>
                        <UniformGrid x:Name="headerPanel" Rows="1" Background="Transparent" Grid.Column="0" IsItemsHost="true" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                        <Border x:Name="contentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="headerPanel" Value="1"/>
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                            <Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="headerPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="contentPanel" Value="1"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="headerPanel" Value="1"/>
                            <Setter Property="Grid.Column" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ErrorFeedbackStyle" BasedOn="{StaticResource TextBoxStyle}" TargetType="TextBox">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Trigger.Setters>
                    <Setter Property="Validation.ErrorTemplate">
                        <Setter.Value>
                            <ControlTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <AdornedElementPlaceholder x:Name="controlHolder" ></AdornedElementPlaceholder>
                                    <TextBlock FontSize="20" Foreground="Red">*</TextBlock>
                                    <TextBlock FontSize="15" Foreground="Red" Text="{Binding ElementName=controlHolder,Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"></TextBlock>
                                </StackPanel>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger.Setters>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DataGridColumnHeaderStyle" TargetType="ListView">
        <Style.Setters>
            
            <Setter Property="FontSize" Value="20"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
            <Setter Property="Foreground" Value="Black"></Setter>
            <Setter Property="FontWeight" Value ="SemiBold"></Setter>
        </Style.Setters>
    </Style>
</ResourceDictionary>
    <!--  <Style x:Key="BlueButtonStyle" TargetType="Button" BasedOn="{StaticResource ResourceKey=ButtonStyle}">
        <Style.Setters>
            <Setter Property="Foreground" Value="Blue"></Setter>
        </Style.Setters>
    </Style>
    <Style x:Key="RedButtonStyle" TargetType="Button" BasedOn="{StaticResource ResourceKey=ButtonStyle}">
        <Style.Setters>
            <Setter Property="Foreground" Value="Red"></Setter>
        </Style.Setters>
    </Style>-->
